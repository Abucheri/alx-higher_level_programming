====================================================
Using the say_my_name function from 3-say_my_name.py
====================================================

This module prints a message in the format "My name is <first name> <last name>",
using the function ``say_my_name(first_name, last_name="")``.

Usage
=====

The ``say_my_name(...)`` function prints the first name and last name attached to a message.

::

	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("O'Brien", "Abucheri")
	My name is O'Brien Abucheri

::

	>>> say_my_name("John", "Smith")
	My name is John Smith

::

	>>> say_my_name("Walter", "White")
	My name is Walter White

::

	>>> say_my_name("Bob")
	My name is Bob 

Error Handling Mechanism
=========================

The say_my_name function handles cases where first_name or last_name is not a string:

::

	>>> say_my_name(12, "White")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name("White", 2)
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>> say_my_name("LeBron", ["Cavs", "Lakers", "Heat"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>> say_my_name({"LeBron": 6, "James": 23}, 7.7)
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

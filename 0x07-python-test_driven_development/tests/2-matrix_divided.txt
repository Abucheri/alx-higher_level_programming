==========================================================
Using the matrix_divided function from 2-matrix_divided.py
==========================================================

This module divides all elements of a matrix by a specified divisor,
using the function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)`` function returns a new matrix

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

	>>> matrix
	[[1, 2, 3], [4, 5, 6]]

Divide all elements of the matrix by a specified divisor:

::

	>>> matrix_divided([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]], 2)
	[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

Error Handling Mechanism
=========================

If the rows of the matrix have different sizes, it raises a TypeError:

::

	>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

If the divisor is not a number, it raises a TypeError:

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], '2')
	Traceback (most recent call last):
	TypeError: div must be a number

If the divisor is equal to zero, it raises a ZeroDivisionError:

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
